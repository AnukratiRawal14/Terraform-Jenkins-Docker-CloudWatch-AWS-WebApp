pipeline {
    agent any

    environment {
        TF_VAR_environment = "${env.BRANCH_NAME}"
        AWS_REGION = "us-east-1"
    }

    stages {

        stage('Terraform Init') {
            steps {
                dir('infra_terraform_code') {
                    script {
                        def bucket      = "webapp-s3-tf-backend"
                        def key         = "envs/${env.BRANCH_NAME}/terraform.tfstate"
                        def region      = "${env.AWS_REGION}"
                        def dynamoTable = "terraform-lock-table"
    
                        sh """
                            terraform init -reconfigure \
                              -backend-config="bucket=${bucket}" \
                              -backend-config="key=${key}" \
                              -backend-config="region=${region}"
                        """
                    }
                }
           }
        }

        stage('Terraform Plan') {
            steps {
                dir('infra_terraform_code') {
                    sh """
                        echo "Running terraform plan..."
                        terraform plan -out=tfplan-${env.BRANCH_NAME}.out
                    """
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('infra_terraform_code') {
                    sh """
                        echo "Manual apply step. Please run:"
                        echo "terraform apply tfplan-${env.BRANCH_NAME}.out"
                        terraform apply tfplan-${env.BRANCH_NAME}.out
                    """
                }
            }
        }
        stage('Terraform Destroy') {
                    steps {
                        input(message: "Do you really want to destroy the infrastructure?")
                        dir('infra_terraform_code') {
                            ansiColor('xterm') {
                                sh """
                                    terraform init -reconfigure \
                                      -backend-config="bucket=webapp-s3-tf-backend" \
                                      -backend-config="key=envs/${env.BRANCH_NAME}/terraform.tfstate" \
                                      -backend-config="region=us-east-1" 
                                    terraform destroy -auto-approve
                                """
                            }
                        }
                    }
        }
   }

      
        post {
            always {
                echo "Terraform pipeline completed for branch: ${env.BRANCH_NAME}"
            }
        }
    
}
